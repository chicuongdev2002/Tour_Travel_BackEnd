package vn.edu.iuh.fit.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import vn.edu.iuh.fit.entity.Account;import vn.edu.iuh.fit.entity.User;import vn.edu.iuh.fit.service.AccountService;import java.util.UUID;@RestController@RequestMapping("/api/accounts")public class AccountController {    @Autowired    private AccountService accountService;//    @PostMapping("/register")//    public ResponseEntity<Account> register(@RequestParam String username, @RequestParam String password) {//        Account newAccount = accountService.register(username, password);//        return new ResponseEntity<>(newAccount, HttpStatus.CREATED);//    }   @PostMapping("/register")   public ResponseEntity<Account> register(@RequestParam String username,                                        @RequestParam String password,                                        @RequestBody User user) {    // Gọi phương thức đăng ký để tạo tài khoản và lưu thông tin người dùng    UUID accountId = accountService.register(username, password, user);    // Tìm tài khoản vừa tạo để trả về    Account newAccount = new Account();    newAccount.setAccountId(accountId);    newAccount.setUsername(username);    return new ResponseEntity<>(newAccount, HttpStatus.CREATED);}    @PostMapping("/login")    public ResponseEntity<Account> login(@RequestParam String username, @RequestParam String password) {        Account account = accountService.login(username, password);        return new ResponseEntity<>(account, HttpStatus.OK);    }    @DeleteMapping("/{accountId}")    public ResponseEntity<Void> deleteAccount(@PathVariable UUID accountId) {        accountService.deleteAccount(accountId);        return new ResponseEntity<>(HttpStatus.NO_CONTENT);    }    @PutMapping("/{accountId}/password")    public ResponseEntity<Void> changePassword(@PathVariable UUID accountId, @RequestParam String newPassword) {        accountService.changePassword(accountId, newPassword);        return new ResponseEntity<>(HttpStatus.NO_CONTENT);    }    @PostMapping("/reset-password")    public ResponseEntity<Void> resetPassword(@RequestParam String username, @RequestParam String newPassword) {        accountService.resetPassword(username, newPassword);        return new ResponseEntity<>(HttpStatus.NO_CONTENT);    }}