package vn.edu.iuh.fit.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import vn.edu.iuh.fit.dto.DiscountDTO;import vn.edu.iuh.fit.dto.DiscountRequest;import vn.edu.iuh.fit.entity.Discount;import vn.edu.iuh.fit.mailservice.SendDiscountCodeRequest;import vn.edu.iuh.fit.service.DiscountService;import java.util.List;@RestController@RequestMapping("/api/discounts")public class DiscountController {    @Autowired    private DiscountService discountService;    @GetMapping    public List<DiscountDTO> getAllDiscounts() {        return discountService.getAllDiscounts();    }    @PostMapping("/send-discount-code")    public ResponseEntity<String> sendDiscountCode(@RequestBody SendDiscountCodeRequest request) {        try {            return discountService.sendDiscountCodesToEmails(request.getEmails(), request.getDiscountIds());        } catch (RuntimeException e) {            return ResponseEntity.badRequest().body("Đã xảy ra lỗi: " + e.getMessage());        }    }    @GetMapping("/{id}")    public ResponseEntity<DiscountDTO> getDiscountById(@PathVariable Long id) {        return discountService.getDiscountById(id);    }    @PostMapping    public ResponseEntity<DiscountDTO> createDiscount(@RequestBody DiscountRequest request) {        Long tourId = request.getTourId();        Discount discount = new Discount();        discount.setDiscountAmount(request.getDiscountAmount());        discount.setStartDate(request.getStartDate());        discount.setEndDate(request.getEndDate());        discount.setCountUse(request.getCountUse());        DiscountDTO createdDiscount = discountService.createDiscount(tourId, request);        return ResponseEntity.ok(createdDiscount);    }    @PutMapping("/{id}")    public ResponseEntity<DiscountDTO> updateDiscount(@PathVariable Long id, @RequestBody Discount discountDetails) {        return discountService.updateDiscount(id, discountDetails);    }    @DeleteMapping("/{id}")    public ResponseEntity<Void> deleteDiscount(@PathVariable Long id) {        return discountService.deleteDiscount(id);    }}