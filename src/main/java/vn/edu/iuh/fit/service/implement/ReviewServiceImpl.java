package vn.edu.iuh.fit.service.implement;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.dto.TourReviewStatistics;import vn.edu.iuh.fit.entity.Review;import vn.edu.iuh.fit.entity.Tour;import vn.edu.iuh.fit.repositories.ReviewRepository;import vn.edu.iuh.fit.repositories.TourRepository;import vn.edu.iuh.fit.service.ReviewService;import java.util.ArrayList;import java.util.List;@Servicepublic class ReviewServiceImpl extends AbstractCrudService<Review, Long> implements ReviewService {    @Autowired    private ReviewRepository reviewRepository;    @Autowired private TourRepository tourRepository;    @Override    protected JpaRepository<Review, Long> getRepository() {        return reviewRepository;    }    @Override    public List<TourReviewStatistics> getAllTourReviewStatistics() {        List<Tour> tours = tourRepository.findAll();        List<TourReviewStatistics> statisticsList = new ArrayList<>();        for (Tour tour : tours) {            List<Review> reviews = reviewRepository.findReviewByTour(tour);            TourReviewStatistics statistics = new TourReviewStatistics();            statistics.setTourId(tour.getTourId());            statistics.setTourName(tour.getTourName());            statistics.setTotalReviews(reviews.size());            if (reviews.isEmpty()) {                statistics.setAverageRating(0);                statistics.setRatingDistribution(new int[5]);            } else {                double totalRating = 0;                int[] distribution = new int[5];                for (Review review : reviews) {                    totalRating += review.getRating();                    distribution[review.getRating() - 1]++;                }                statistics.setAverageRating(totalRating / reviews.size());                statistics.setRatingDistribution(distribution);            }            statisticsList.add(statistics);        }        return statisticsList;    }}