package vn.edu.iuh.fit.service;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.hateoas.PagedModel;import org.springframework.web.multipart.MultipartFile;import vn.edu.iuh.fit.dto.*;import vn.edu.iuh.fit.dto.respone.RevenueStatisticsResponse;import vn.edu.iuh.fit.dto.respone.TourResponseDTO;import vn.edu.iuh.fit.entity.Destination;import vn.edu.iuh.fit.entity.Image;import vn.edu.iuh.fit.entity.Tour;import vn.edu.iuh.fit.enums.ParticipantType;import vn.edu.iuh.fit.enums.TourType;import java.io.File;import java.io.IOException;import java.math.BigDecimal;import java.time.LocalDate;import java.time.LocalDateTime;import java.util.List;import java.util.UUID;public interface TourService extends CrudService<Tour, Long> {    List<Tour> findToursByDestination(Destination destination);    Page<TourSummaryDTO> getTours(String keyword, int page, int size, BigDecimal minPrice, BigDecimal maxPrice,                                  String tourType, String startLocation, String participantType);    //Lấy chi tiết tour theo id    TourDetailDTO getTourById(long id);    Tour convertDtoToEntity(TourDetailDTO tourDetailDTO);    String uploadImageToAWS(File file) throws IOException;    File convertMultiPartToFile(MultipartFile file) throws IOException;    List<TourSimpleDTO> getAllTours();    List<TourWithDeparturesDTO> getAllToursAndDeparture();    TourInfoDTO convertToDTO(Tour tour);    Page<TourResponseDTO> getListTour(Pageable pageable);    void approveTour(Long id);    void deleteTour(Long id);    List<TourCountDTO> getTourStatisticsByUser();    List<RevenueStatisticsDTO> getRevenueStatistics(LocalDate startDate, LocalDate endDate);    RevenueStatisticsResponse getRevenueStatisticsTourAndTicket(LocalDate startDate, LocalDate endDate);     List<MonthlyRevenueDTO> getMonthlyRevenueStatistics(int year);//    Page<TourListDTO> getToursTest(int page, int size);Page<TourListDTO> getToursTest(int page, int size, String keyword, String startLocation,                               String tourTypeStr, String participantTypeStr,                               LocalDateTime startDate, LocalDateTime endDate,                               BigDecimal minPrice, BigDecimal maxPrice,                               Long userId);    TourCountDTO getTourStatisticsByUserId(Long userId);}