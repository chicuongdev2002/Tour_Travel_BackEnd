package vn.edu.iuh.fit.service.implement;import org.joda.time.LocalDateTime;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.entity.Booking;import vn.edu.iuh.fit.entity.Departure;import vn.edu.iuh.fit.entity.TourPricing;import vn.edu.iuh.fit.enums.ParticipantType;import vn.edu.iuh.fit.repositories.TourPricingRepository;import vn.edu.iuh.fit.service.DepartureService;import vn.edu.iuh.fit.service.TourPricingService;@Servicepublic class TourPricingServiceImpl extends AbstractCrudService<TourPricing, Long> implements TourPricingService {    @Autowired    private TourPricingRepository tourPricingRepository;    @Autowired    private DepartureService departureService;    @Override    protected JpaRepository<TourPricing, Long> getRepository() {        return tourPricingRepository;    }    @Override    public String getPriceByDeparture(long departureId) {        StringBuilder tourPricing = new StringBuilder();        Departure d = departureService.getById(departureId);        for(ParticipantType p : ParticipantType.values()) {            TourPricing t = tourPricingRepository.findFirstByDepartureAndParticipantTypeAndModifiedDateBeforeOrderByModifiedDateDesc(d, p, d.getStartDate());            tourPricing.append(t == null? 0 : t.getPrice().longValue()).append(" ");        }        return tourPricing.toString();    }    @Override    public long calculatePrice(Booking booking) {        int numOfChildren = Integer.parseInt(booking.getParticipants().split(",")[0]);        int numOfAdults = Integer.parseInt(booking.getParticipants().split(",")[1]);        int numElderly = Integer.parseInt(booking.getParticipants().split(",")[2]);        long priceChildren = Integer.parseInt(getPriceByDeparture(booking.getDeparture().getDepartureId()).split(" ")[0]);        long priceAdults = Integer.parseInt(getPriceByDeparture(booking.getDeparture().getDepartureId()).split(" ")[1]);        long priceElderly = Integer.parseInt(getPriceByDeparture(booking.getDeparture().getDepartureId()).split(" ")[2]);        return numOfChildren*priceChildren + numOfAdults*priceAdults + numElderly*priceElderly;    }}