package vn.edu.iuh.fit.service.implement;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.entity.User;import vn.edu.iuh.fit.repositories.UserRepository;import vn.edu.iuh.fit.service.AbstractCrudService;import vn.edu.iuh.fit.service.UserService;import java.util.Optional;import java.util.UUID;@Servicepublic class UserServiceImpl extends AbstractCrudService<User, Long> implements UserService {    @Autowired    private UserRepository userRepository;    @Override    protected JpaRepository<User, Long> getRepository() {        return userRepository;    }    @Override    public User findByUsername(String username) {        return null;    }    @Override    public boolean existsByEmail(String email) {       // Gọi phương thức từ UserRepository để kiểm tra email       return userRepository.findByEmail(email).isPresent();    }    @Override    public User getById(Long id) {        return userRepository.findById(id).orElse(null);    }    //    public User createUser(User user) {//        // Tạo người dùng mới và lưu vào cơ sở dữ liệu//        user.setUserId(UUID.randomUUID()); // Tạo ID ngẫu nhiên//        return userRepository.save(user);//    }    public Optional<User> updateUser(long userId, User userDetails) {        // Tìm người dùng hiện tại        Optional<User> optionalUser = userRepository.findById(userId);        if (optionalUser.isPresent()) {            User existingUser = optionalUser.get();            // Cập nhật thông tin            existingUser.setEmail(userDetails.getEmail());            existingUser.setFullName(userDetails.getFullName());            existingUser.setPhoneNumber(userDetails.getPhoneNumber());            // Lưu thông tin đã cập nhật            return Optional.of(userRepository.save(existingUser));        }        return Optional.empty();    }    public void deleteUser(long userId) {        // Xóa người dùng theo ID        userRepository.deleteById(userId);    }}