package vn.edu.iuh.fit.mailservice;import jakarta.mail.MessagingException;import jakarta.mail.internet.MimeMessage;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.core.io.ByteArrayResource;import org.springframework.mail.javamail.JavaMailSender;import org.springframework.mail.javamail.MimeMessageHelper;import org.springframework.stereotype.Service;import vn.edu.iuh.fit.dto.BookingDTO;import vn.edu.iuh.fit.dto.request.TourRequest;import vn.edu.iuh.fit.entity.Departure;import vn.edu.iuh.fit.entity.Image;import vn.edu.iuh.fit.entity.Tour;import vn.edu.iuh.fit.entity.TourPricing;import vn.edu.iuh.fit.enums.AccountRole;import vn.edu.iuh.fit.enums.ParticipantType;import java.text.NumberFormat;import java.text.SimpleDateFormat;import java.time.LocalDateTime;import java.time.Year;import java.time.format.DateTimeFormatter;import java.util.Comparator;import java.util.List;import java.util.Locale;import java.util.Optional;@Servicepublic class EmailService {    @Autowired    private JavaMailSender mailSender;    @Value("${spring.mail.username}")    private String fromEmail;    public void sendVerificationEmail(String toEmail, String code) {        String subject = "X√°c Nh·∫≠n Email";        String content = generateEmailContent(code);        sendHtmlEmail(toEmail, subject, content);    }    private String generateEmailContent(String code) {        return "<!DOCTYPE html>"                + "<html lang='vi'>"                + "<head>"                + "<meta charset='UTF-8'>"                + "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"                + "<style>"                + "body { font-family: 'Roboto', 'Helvetica', Arial, sans-serif; line-height: 1.6; color: #333; background-color: #f4f4f4; margin: 0; padding: 0; }"                + ".container { max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }"                + ".header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: #ffffff; padding: 20px; text-align: center; }"                + ".content { padding: 30px; }"                + "h1 { color: #ffffff; margin: 0; font-size: 28px; }"                + "h2 { color: #333333; margin-top: 0; }"                + ".code-container { background-color: #f8f9fa; border: 2px dashed #764ba2; border-radius: 8px; padding: 15px; margin: 25px 0; text-align: center; }"                + ".code { font-size: 36px; font-weight: bold; color: #764ba2; letter-spacing: 5px; }"                + ".footer { background-color: #f8f9fa; text-align: center; padding: 15px; font-size: 12px; color: #666; }"                + ".button { display: inline-block; padding: 12px 24px; background-color: #764ba2; color: #ffffff; text-decoration: none; border-radius: 5px; font-weight: bold; margin-top: 20px; transition: background-color 0.3s; }"                + ".button:hover { background-color: #5a387c; }"                + "@media only screen and (max-width: 600px) { .container { width: 100%; } }"                + "</style>"                + "</head>"                + "<body>"                + "<div class='container'>"                + "<div class='header'>"                + "<h1>X√°c Nh·∫≠n Email</h1>"                + "</div>"                + "<div class='content'>"                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω d·ªãch v·ª• c·ªßa ch√∫ng t√¥i. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω v√† b·∫£o m·∫≠t t√†i kho·∫£n c·ªßa b·∫°n, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c nh·∫≠n d∆∞·ªõi ƒë√¢y:</p>"                + "<div class='code-container'>"                + "<div class='code'>" + code + "</div>"                + "</div>"                + "<p>Vui l√≤ng nh·∫≠p m√£ n√†y v√†o trang x√°c nh·∫≠n ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n c·ªßa b·∫°n. M√£ x√°c nh·∫≠n n√†y s·∫Ω h·∫øt h·∫°n sau 15 ph√∫t.</p>"                + "<p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email n√†y ho·∫∑c li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i n·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o.</p>"                + "<a href='http://localhost:5173/' class='button'>X√°c Nh·∫≠n Email</a>"                + "</div>"                + "<div class='footer'>"                + "<p>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"                + "<p>&copy; 2024 T√™n C√¥ng Ty C·ªßa B·∫°n. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>"                + "</div>"                + "</div>"                + "</body>"                + "</html>";    }    public void sendDiscountEmail(String toEmail, String discountCode, String tourName, String imageUrl, String startDate, String endDate) {        String subject = "M√£ Khuy·∫øn M√£i C·ªßa B·∫°n";        String content = generateDiscountEmailContent(discountCode, tourName, imageUrl, startDate, endDate);        sendHtmlEmail(toEmail, subject, content);    }    private String generateDiscountEmailContent(String discountCode, String tourName, String imageUrl, String startDate, String endDate) {        StringBuilder contentBuilder = new StringBuilder();        contentBuilder.append("<!DOCTYPE html>")                .append("<html lang='vi'>")                .append("<head>")                .append("<meta charset='UTF-8'>")                .append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")                .append("<style>")                .append("body { font-family: 'Roboto', 'Arial', sans-serif; line-height: 1.6; color: #333; background-color: #f0f2f5; margin: 0; padding: 20px; }")                .append(".container { max-width: 600px; margin: 0 auto; background-color: #ffffff; border-radius: 16px; overflow: hidden; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12); }")                .append(".header { background: linear-gradient(135deg, #2ecc71, #27ae60); color: #ffffff; padding: 30px 20px; text-align: center; }")                .append(".content { padding: 40px 30px; }")                .append("h1 { color: #ffffff; margin: 0; font-size: 32px; font-weight: 700; text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }")                .append(".code-container { background: linear-gradient(to right bottom, #f8f9fa, #e9ecef); border: 2px dashed #2ecc71; border-radius: 12px; padding: 25px; margin: 30px 0; text-align: center; position: relative; }")                .append(".code { font-size: 42px; font-weight: 800; color: #2ecc71; letter-spacing: 8px; text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1); }")                .append(".code::before { content: 'üéâ'; font-size: 24px; position: absolute; left: 20px; top: 50%; transform: translateY(-50%); }")                .append(".code::after { content: 'üéâ'; font-size: 24px; position: absolute; right: 20px; top: 50%; transform: translateY(-50%); }")                .append(".tour-name { font-size: 24px; font-weight: 600; text-align: center; margin-bottom: 20px; }")                .append(".tour-image { max-width: 100%; height: auto; display: block; margin: 0 auto 20px; border-radius: 12px; }")                .append("</style>")                .append("</head>")                .append("<body>")                .append("<div class='container'>")                .append("<div class='header'>")                .append("<h1>∆Øu ƒê√£i ƒê·∫∑c Bi·ªát</h1>")                .append("</div>")                .append("<div class='content'>")                .append("<div class='code-container'>")                .append("<div class='code'>").append(discountCode).append("</div>")                .append("</div>");        if (tourName != null && !tourName.trim().isEmpty()) {            contentBuilder.append("<div class='tour-name'>").append(tourName).append("</div>");            if (imageUrl != null && !imageUrl.trim().isEmpty()) {                contentBuilder.append("<img src='").append(imageUrl).append("' alt='Tour Image' class='tour-image'/>");            }        }        contentBuilder.append("<div class='date-info'>")                .append("Th·ªùi gian √°p d·ª•ng: <strong>").append(startDate).append("</strong> ƒë·∫øn <strong>").append(endDate).append("</strong>")                .append("</div>")                .append("<p style='text-align: center;'>S·ª≠ d·ª•ng m√£ n√†y ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát cho chuy·∫øn du l·ªãch c·ªßa b·∫°n!</p>")                .append("<div style='text-align: center;'>")                .append("<a href='#' class='call-to-action'>ƒê·∫∑t Tour Ngay üéØ</a>")                .append("</div>")                .append("<p class='notice'>* L∆∞u √Ω: N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email n√†y ho·∫∑c li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i.</p>")                .append("</div>")                .append("<div class='footer'>")                .append("<p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>")                .append("<p>&copy; ").append(java.time.Year.now().getValue()).append(" XuyenVietTour. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>")                .append("</div>")                .append("</div>")                .append("</body>")                .append("</html>");        return contentBuilder.toString();    }    public void sendLockUnlockNotification(String toEmail, String action) {        String subject = "Th√¥ng B√°o V·ªÅ T√†i Kho·∫£n C·ªßa B·∫°n";        String content = generateLockUnlockEmailContent(action,LocalDateTime.now());        sendHtmlEmail(toEmail, subject, content);    }    private String generateLockUnlockEmailContent(String action, LocalDateTime actionTime) {        String actionMessage = "ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a";        String actionIcon = "üîì";        String bgColor = "#4CAF50";        if ("locked".equals(action)) {            actionMessage = "ƒë√£ b·ªã kh√≥a";            actionIcon = "üîí";            bgColor = "#f44336";        }        String actionTimeStr = actionTime.format(DateTimeFormatter.ofPattern("HH:mm:ss, dd/MM/yyyy"));        return String.join("\n",                "<!DOCTYPE html>",                "<html>",                "<head>",                "<meta charset='utf-8'>",                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>",                "<style>",                "    body {",                "        font-family: 'Segoe UI', Arial, sans-serif;",                "        line-height: 1.6;",                "        color: #333;",                "        margin: 0;",                "        padding: 0;",                "        background-color: #f5f5f5;",                "    }",                "    .container {",                "        max-width: 600px;",                "        margin: 20px auto;",                "        background: #ffffff;",                "        border-radius: 8px;",                "        box-shadow: 0 2px 4px rgba(0,0,0,0.1);",                "        overflow: hidden;",                "    }",                "    .header {",                "        background-color: " + bgColor + ";",                "        color: white;",                "        padding: 30px 20px;",                "        text-align: center;",                "    }",                "    .header-icon {",                "        font-size: 48px;",                "        margin-bottom: 10px;",                "    }",                "    .title {",                "        font-size: 24px;",                "        font-weight: bold;",                "        margin: 0;",                "    }",                "    .content {",                "        padding: 30px;",                "        background: #ffffff;",                "    }",                "    .message-box {",                "        background-color: #f8f9fa;",                "        border-left: 4px solid " + bgColor + ";",                "        padding: 15px;",                "        margin: 20px 0;",                "        border-radius: 4px;",                "    }",                "    .timestamp {",                "        color: #666;",                "        font-size: 14px;",                "        margin: 10px 0;",                "        padding: 10px;",                "        background: #f8f9fa;",                "        border-radius: 4px;",                "        text-align: center;",                "    }",                "    .warning {",                "        background-color: #fff3cd;",                "        border: 1px solid #ffeeba;",                "        color: #856404;",                "        padding: 15px;",                "        margin: 20px 0;",                "        border-radius: 4px;",                "    }",                "    .signature {",                "        margin-top: 30px;",                "        padding-top: 20px;",                "        border-top: 1px solid #eee;",                "    }",                "    .footer {",                "        background: #f8f9fa;",                "        padding: 20px;",                "        text-align: center;",                "        font-size: 12px;",                "        color: #666;",                "    }",                "    .button {",                "        display: inline-block;",                "        padding: 10px 20px;",                "        background-color: " + bgColor + ";",                "        color: white;",                "        text-decoration: none;",                "        border-radius: 4px;",                "        margin: 20px 0;",                "    }",                "    @media only screen and (max-width: 600px) {",                "        .container { margin: 0; border-radius: 0; }",                "        .content { padding: 20px; }",                "    }",                "</style>",                "</head>",                "<body>",                "    <div class='container'>",                "        <div class='header'>",                "            <div class='header-icon'>" + actionIcon + "</div>",                "            <h1 class='title'>Th√¥ng B√°o B·∫£o M·∫≠t</h1>",                "        </div>",                "        <div class='content'>",                "            <p>K√≠nh g·ª≠i qu√Ω kh√°ch,</p>",                "            <div class='message-box'>",                "                <strong>Tr·∫°ng th√°i t√†i kho·∫£n:</strong> T√†i kho·∫£n c·ªßa b·∫°n " + actionMessage + " th√†nh c√¥ng.",                "            </div>",                "            <div class='timestamp'>",                "                <span>‚è∞ Th·ªùi gian th·ª±c hi·ªán: " + actionTimeStr + "</span>",                "            </div>",                "            <div class='warning'>",                "                <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong><br>",                "                N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y, vui l√≤ng li√™n h·ªá ngay v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i",                "                ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ k·ªãp th·ªùi.",                "            </div>",                "            <a href='#' class='button'>Li√™n H·ªá H·ªó Tr·ª£</a>",                "            <div class='signature'>",                "                <p>Tr√¢n tr·ªçng,<br>",                "                <strong>ƒê·ªôi ng≈© H·ªó tr·ª£ Kh√°ch h√†ng</strong></p>",                "            </div>",                "        </div>",                "        <div class='footer'>",                "            <p>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>",                "            <p>¬© " + Year.now().getValue() + " T√™n C√¥ng Ty C·ªßa B·∫°n. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>",                "        </div>",                "    </div>",                "</body>",                "</html>"        );    }    public void sendResetPasswordNotification(String toEmail, String newPassword) {        String subject = "Th√¥ng B√°o Reset M·∫≠t Kh·∫©u";        String content = generateResetPasswordEmailContent(newPassword);        sendHtmlEmail(toEmail, subject, content);    }    private String generateResetPasswordEmailContent(String newPassword) {        return "<!DOCTYPE html>"                + "<html lang='vi'>"                + "<head>"                + "<meta charset='UTF-8'>"                + "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"                + "<style>"                + "body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f2f2f7; color: #333; }"                + ".container { max-width: 600px; margin: 40px auto; background: #ffffff; padding: 30px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); }"                + ".header { text-align: center; padding-bottom: 20px; border-bottom: 1px solid #e0e0e0; }"                + ".header h1 { font-size: 24px; color: #1a73e8; margin: 0; }"                + ".header img { width: 100px; margin-bottom: 10px; }"                + ".content { margin: 30px 0; line-height: 1.6; }"                + ".content p { margin: 0 0 16px; }"                + ".content strong { color: #d32f2f; font-weight: bold; }"                + ".footer { text-align: center; font-size: 12px; color: #666; padding-top: 20px; border-top: 1px solid #e0e0e0; }"                + ".btn { display: inline-block; padding: 10px 20px; margin-top: 20px; color: #ffffff; background-color: #1a73e8; text-decoration: none; border-radius: 4px; font-size: 14px; }"                + "a { color: #1a73e8; text-decoration: none; }"                + "</style>"                + "</head>"                + "<body>"                + "<div class='container'>"                + "<div class='header'>"                + "<h1>Th√¥ng B√°o Reset M·∫≠t Kh·∫©u</h1>"                + "</div>"                + "<div class='content'>"                + "<p>Ch√†o b·∫°n,</p>"                + "<p>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n l√†: <strong style='font-size: 18px;'>" + newPassword + "</strong></p>"                + "<p>Vui l√≤ng <a href='http://localhost:5173/login-register' class='btn'>ƒëƒÉng nh·∫≠p</a> v√† thay ƒë·ªïi m·∫≠t kh·∫©u c·ªßa b·∫°n ngay l·∫≠p t·ª©c ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n.</p>"                + "<p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu reset m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>"                + "</div>"                + "<div class='footer'>"                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>"                + "<p><small>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email h·ªó tr·ª£.</small></p>"                + "</div>"                + "</div>"                + "</body>"                + "</html>";    }    public void sendBookingConfirmationEmail(String toEmail,BookingDTO bookingDTO, byte[] qrCodeBytes) {        try {            // T·∫°o message            MimeMessage message = mailSender.createMimeMessage();            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");            // Thi·∫øt l·∫≠p th√¥ng tin email            helper.setTo(toEmail);            helper.setSubject("X√°c Nh·∫≠n ƒê·∫∑t Tour - Booking ID: " + bookingDTO.getBookingId());            // N·ªôi dung HTML            helper.setText(generateBookingConfirmationEmailContent(bookingDTO), true);            // ƒê√≠nh k√®m QR code            helper.addAttachment(                    "QR_Code_Booking_" + bookingDTO.getBookingId() + ".png",                    new ByteArrayResource(qrCodeBytes)            );            // G·ª≠i email            mailSender.send(message);        } catch (MessagingException e) {            throw new RuntimeException("Error sending email", e);        }    }    private String generateBookingConfirmationEmailContent(BookingDTO bookingDTO) {        return "<!DOCTYPE html>"                + "<html lang='vi'>"                + "<head>"                + "<meta charset='UTF-8'>"                + "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"                + "<style>"                + "body { font-family: 'Roboto', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }"                + ".container { max-width: 600px; margin: 20px auto; background: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }"                + ".header { background: linear-gradient(135deg, #1e88e5 0%, #1565c0 100%); color: white; padding: 30px; text-align: center; }"                + ".header h1 { margin: 0; font-size: 24px; }"                + ".content { padding: 30px; }"                + ".booking-info { background-color: #f8f9fa; border-radius: 6px; padding: 20px; margin: 20px 0; }"                + ".booking-id { font-size: 24px; color: #1565c0; font-weight: bold; text-align: center; margin-bottom: 20px; }"                + ".footer { background-color: #f8f9fa; padding: 20px; text-align: center; font-size: 14px; color: #666; border-top: 1px solid #eee; }"                + ".info-label { font-weight: bold; color: #555; }"                + ".info-value { color: #333; }"                + ".button { display: inline-block; padding: 12px 24px; background-color: #1565c0; color: white; text-decoration: none; border-radius: 4px; margin-top: 20px; }"                + ".note { background-color: #fff3cd; border: 1px solid #ffeeba; color: #856404; padding: 15px; border-radius: 4px; margin: 20px 0; }"                + "@media only screen and (max-width: 600px) { .container { margin: 0; border-radius: 0; } }"                + "</style>"                + "</head>"                + "<body>"                + "<div class='container'>"                + "<div class='header'>"                + "<h1>X√°c Nh·∫≠n ƒê·∫∑t Tour</h1>"                + "</div>"                + "<div class='content'>"                + "<p>K√≠nh g·ª≠i Qu√Ω kh√°ch,</p>"                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t tour v·ªõi ch√∫ng t√¥i. D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ ƒë∆°n ƒë·∫∑t tour c·ªßa b·∫°n:</p>"                + "<div class='booking-info'>"                + "<div class='booking-id'>M√£ ƒê·∫∑t Tour: " + bookingDTO.getBookingId() + "</div>"                + "<p><span class='info-label'>Ng√†y ƒê·∫∑t:</span> <span class='info-value'>"                + bookingDTO.getBookingDate().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm")) + "</span></p>"                + "<p><span class='info-label'>Tr·∫°ng Th√°i:</span> <span class='info-value'>"                + (bookingDTO.isActive() ? "ƒê√£ X√°c Nh·∫≠n" : "Ch∆∞a X√°c Nh·∫≠n") + "</span></p>"                + "</div>"                + "<div class='note'>"                + "<strong>L∆∞u √Ω:</strong> M√£ QR Code ƒë·∫∑t tour c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë√≠nh k√®m trong email n√†y. "                + "Vui l√≤ng l∆∞u gi·ªØ v√† xu·∫•t tr√¨nh m√£ QR code khi check-in tham gia tour."                + "</div>"                + "<div style='text-align: center;'>"                + "<a href='http://localhost:5173/booking-history' class='button'>Xem Chi Ti·∫øt ƒê·∫∑t Tour</a>"                + "</div>"                + "</div>"                + "<div class='footer'>"                + "<p>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"                + "<p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua hotline: <strong>1900 xxxx</strong></p>"                + "<p>&copy; " + Year.now().getValue() + " Xuyen Viet Tour. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>"                + "</div>"                + "</div>"                + "</body>"                + "</html>";    }    public void sendNewTourNotification(String toEmail, Tour tour) {        String subject = "Xuyen Viet Tour th√¥ng b√°o tour m·ªõi";        String content = generateNewTourEmailContent(tour);        sendHtmlEmail(toEmail, subject, content);    }    private String generateNewTourEmailContent(Tour tour) {        StringBuilder emailContent = new StringBuilder();        NumberFormat currencyFormat = NumberFormat.getNumberInstance(new Locale("vi", "VN"));        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");        emailContent.append("<!DOCTYPE html>")                .append("<html lang='vi'>")                .append("<head>")                .append("<meta charset='UTF-8'>")                .append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")                .append("<style>")                .append("body { font-family: 'Roboto', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }")                .append(".container { max-width: 600px; margin: 20px auto; background: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }")                .append(".header { background: linear-gradient(135deg, #1e88e5 0%, #1565c0 100%); color: white; padding: 25px; text-align: center; }")                .append(".content { padding: 30px; color: #333; }")                .append(".button { display: inline-block; padding: 12px 24px; background: linear-gradient(135deg, #1e88e5 0%, #1565c0 100%); color: white; text-decoration: none; border-radius: 4px; margin-top: 20px; transition: transform 0.2s; }")                .append(".button:hover { transform: translateY(-2px); box-shadow: 0 2px 8px rgba(0,0,0,0.2); }")                .append(".image { max-width: 100%; height: auto; border-radius: 8px; margin: 10px 0; box-shadow: 0 2px 6px rgba(0,0,0,0.1); }")                .append(".departure-card { background-color: #f8f9fa; border-radius: 6px; padding: 15px; margin: 10px 0; }")                .append(".price-list { list-style: none; padding-left: 20px; }")                .append(".price-item { display: flex; justify-content: space-between; margin: 8px 0; }")                .append(".participant-type { font-weight: 500; color: #1e88e5; }")                .append(".price { font-weight: bold; color: #2e7d32; }")                .append(".footer { background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 0.9em; border-top: 1px solid #eee; }")                .append("</style>")                .append("</head>")                .append("<body>")                .append("<div class='container'>")                .append("<div class='header'>")                .append("<h1 style='margin:0;'>Th√¥ng Tin Tour M·ªõi</h1>")                .append("</div>")                .append("<div class='content'>")                .append("<p>K√≠nh g·ª≠i Qu√Ω kh√°ch,</p>")                .append("<p>Xuyen Viet Tour v·ª´a c√≥ tour <strong>").append(tour.getTourName()).append("</strong> . D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt:</p>")                .append("<div style='background-color: #f8f9fa; padding: 15px; border-radius: 6px; margin: 15px 0;'>")                .append("<p><strong>üìù M√¥ t·∫£:</strong><br>").append(tour.getTourDescription()).append("</p>")                .append("<p><strong>üìç ƒê·ªãa ƒëi·ªÉm b·∫Øt ƒë·∫ßu:</strong><br>").append(tour.getStartLocation()).append("</p>")                .append("</div>")                .append("<h3>üóìÔ∏è L·ªãch kh·ªüi h√†nh:</h3>");        for (Departure departure : tour.getDepartures()) {            LocalDateTime startDate = departure.getStartDate();            LocalDateTime endDate = departure.getEndDate();            emailContent.append("<div class='departure-card'>")                    .append("<h4 style='margin-top:0;'>T·ª´ ")                    .append(startDate.format(dateFormatter))                    .append(" ƒë·∫øn ")                    .append(endDate.format(dateFormatter))                    .append("</h4>")                    .append("<ul class='price-list'>");            for (TourPricing pricing : departure.getTourPricing()) {                String participantTypeDisplay = getParticipantTypeInVietnamese(pricing.getParticipantType());                emailContent.append("<li class='price-item'>")                        .append("<span class='participant-type'>").append(participantTypeDisplay).append("</span>")                        .append("<span class='price'>").append(currencyFormat.format(pricing.getPrice())).append(" VNƒê</span>")                        .append("</li>");            }            emailContent.append("</ul></div>");        }        if (tour.getImages() != null && !tour.getImages().isEmpty()) {            emailContent.append("<h3>üì∏ H√¨nh ·∫£nh tour:</h3>");            emailContent.append("<div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px;'>");            for (Image image : tour.getImages()) {                emailContent.append("<img src='").append(image.getImageUrl()).append("' class='image' alt='H√¨nh ·∫£nh tour' />");            }            emailContent.append("</div>");        }        emailContent.append("<div style='text-align: center; margin-top: 30px;'>")                .append("<a href='http://localhost:5173/tour-details/").append(tour.getTourId()).append("' class='button'>Xem Chi Ti·∫øt Tour</a>")                .append("</div>")                .append("<p style='margin-top: 30px;'>C·∫£m ∆°n Qu√Ω kh√°ch ƒë√£ quan t√¢m ƒë·∫øn d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>")                .append("</div>")                .append("<div class='footer'>")                .append("<p style='margin:0;'>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>")                .append("</div>")                .append("</div>")                .append("</body>")                .append("</html>");        return emailContent.toString();    }    private String getParticipantTypeInVietnamese(ParticipantType participantType) {        switch (participantType) {            case CHILDREN:                return "Tr·∫ª em";            case ADULTS:                return "Ng∆∞·ªùi l·ªõn";            case ELDERLY:                return "Ng∆∞·ªùi cao tu·ªïi";            default:                return participantType.getDescription();        }    }// Th√¥ng b√°o tour ph√™ du·ªát th√†nh c√¥ng   public void sendTourApprovalNotification(String toEmail, Tour tour) {    String subject = "Th√¥ng b√°o: Tour ƒë√£ ph√™ duy·ªát th√†nh c√¥ng";    String content = generateApprovalEmailContent(tour);    sendHtmlEmail(toEmail, subject, content);}    private String generateApprovalEmailContent(Tour tour) {        StringBuilder emailContent = new StringBuilder();        emailContent.append("<!DOCTYPE html>")                .append("<html lang='vi'>")                .append("<head>")                .append("<meta charset='UTF-8'>")                .append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")                .append("<style>")                .append("body { font-family: 'Roboto', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }")                .append(".container { max-width: 600px; margin: 20px auto; background: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }")                .append(".header { background: linear-gradient(135deg, #1e88e5 0%, #1565c0 100%); color: white; padding: 25px; text-align: center; }")                .append(".content { padding: 30px; color: #333; }")                .append(".footer { background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 0.9em; border-top: 1px solid #eee; }")                .append("</style>")                .append("</head>")                .append("<body>")                .append("<div class='container'>")                .append("<div class='header'>")                .append("<h1 style='margin:0;'>Th√¥ng B√°o Tour ƒê√£ Ph√™ Duy·ªát</h1>")                .append("</div>")                .append("<div class='content'>")                .append("<p>K√≠nh g·ª≠i Qu√Ω nh√† cung c·∫•p,</p>")                .append("<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng tour <strong>").append(tour.getTourName()).append("</strong> ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát th√†nh c√¥ng.</p>")                .append("<p>C·∫£m ∆°n Qu√Ω nh√† cung c·∫•p ƒë√£ h·ª£p t√°c v·ªõi ch√∫ng t√¥i!</p>")                .append("</div>")                .append("<div class='footer'>")                .append("<p style='margin:0;'>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>")                .append("</div>")                .append("</div>")                .append("</body>")                .append("</html>");        return emailContent.toString();    }    //Thong bao thay doi chuyen di    public void sendTourDateChangeNotification(String toEmail,Tour tour,  List<Departure> departure, List<Departure> newDepartures) {        String subject = "Th√¥ng b√°o: Thay ƒë·ªïi chuy·∫øn ƒëi c·ªßa b·∫°n";        String content = generateChangeEmailContent(tour,departure, newDepartures);        sendHtmlEmail(toEmail, subject, content);    }    private String generateChangeEmailContent(Tour tour,List<Departure> departure, List<Departure> newDepartures) {        StringBuilder emailContent = new StringBuilder();        // Ki·ªÉm tra departures c√≥ null kh√¥ng        if (departure == null || newDepartures == null || newDepartures.isEmpty()) {            return "Kh√¥ng c√≥ th√¥ng tin chuy·∫øn ƒëi.";        }        // L·∫•y departure ƒë·∫ßu ti√™n ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin        Departure oldDeparture = departure.stream().findFirst().orElse(null);        Departure newDeparture = newDepartures.stream().findFirst().orElse(null);        emailContent.append("<!DOCTYPE html>")                .append("<html lang='vi'>")                .append("<head>")                .append("<meta charset='UTF-8'>")                .append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")                .append("<style>")                .append("body { font-family: 'Roboto', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }")                .append(".container { max-width: 600px; margin: 20px auto; background: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }")                .append(".header { background: linear-gradient(135deg, #1e88e5 0%, #1565c0 100%); color: white; padding: 25px; text-align: center; }")                .append(".content { padding: 30px; color: #333; }")                .append(".footer { background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 0.9em; border-top: 1px solid #eee; }")                .append("</style>")                .append("</head>")                .append("<body>")                .append("<div class='container'>")                .append("<div class='header'>")                .append("<h1 style='margin:0;'>Th√¥ng B√°o Thay ƒê·ªïi Chuy·∫øn ƒêi</h1>")                .append("</div>")                .append("<div class='content'>")                .append("<p>K√≠nh g·ª≠i Qu√Ω kh√°ch,</p>")                .append("<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng c√≥ s·ª± thay ƒë·ªïi trong chuy·∫øn ƒëi c·ªßa b·∫°n:</p>")                .append("<h3>Th√¥ng Tin Chuy·∫øn ƒêi:</h3>")                .append("<p><strong>T√™n Tour:</strong> ").append(tour.getTourName()).append("</p>");        // Hi·ªÉn th·ªã th√¥ng tin departure c≈©        if (oldDeparture != null) {            emailContent.append("<h4>Th√¥ng Tin Kh·ªüi H√†nh C≈©:</h4>")                    .append("<p><strong>Ng√†y B·∫Øt ƒê·∫ßu:</strong> ")                    .append(oldDeparture.getStartDate() != null                            ? oldDeparture.getStartDate().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))                            : "Kh√¥ng c√≥ th√¥ng tin")                    .append("</p>")                    .append("<p><strong>Ng√†y K·∫øt Th√∫c:</strong> ")                    .append(oldDeparture.getEndDate() != null                            ? oldDeparture.getEndDate().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))                            : "Kh√¥ng c√≥ th√¥ng tin")                    .append("</p>");        }        // Hi·ªÉn th·ªã th√¥ng tin departure m·ªõi        if (newDeparture != null) {            emailContent.append("<h4>Th√¥ng Tin Kh·ªüi H√†nh M·ªõi:</h4>")                    .append("<p><strong>Ng√†y B·∫Øt ƒê·∫ßu:</strong> ")                    .append(newDeparture.getStartDate() != null                            ? newDeparture.getStartDate().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))                            : "Kh√¥ng c√≥ th√¥ng tin")                    .append("</p>")                    .append("<p><strong>Ng√†y K·∫øt Th√∫c:</strong> ")                    .append(newDeparture.getEndDate() != null                            ? newDeparture.getEndDate().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))                            : "Kh√¥ng c√≥ th√¥ng tin")                    .append("</p>");        }        emailContent.append("<p>C·∫£m ∆°n Qu√Ω kh√°ch ƒë√£ h·ª£p t√°c v·ªõi ch√∫ng t√¥i!</p>")                .append("</div>")                .append("<div class='footer'>")                .append("<p style='margin:0;'>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>")                .append("</div>")                .append("</div>")                .append("</body>")                .append("</html>");        return emailContent.toString();    }    //Th√¥ng b√°o h·ªßy tour    public void sendTourNotification(String toEmail, Tour tour, AccountRole role, boolean isAdminDeletion) {        String subject = "Th√¥ng b√°o: Tour ƒë√£ b·ªã x√≥a";        String content = generateDeletionEmailContent(tour, role, isAdminDeletion);        sendHtmlEmail(toEmail, subject, content);    }    private String generateDeletionEmailContent(Tour tour, AccountRole role, boolean isAdminDeletion) {        StringBuilder emailContent = new StringBuilder();        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");        emailContent.append("<!DOCTYPE html>")                .append("<html lang='vi'>")                .append("<head>")                .append("<meta charset='UTF-8'>")                .append("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")                .append("<style>")                .append("body { font-family: 'Roboto', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }")                .append(".container { max-width: 600px; margin: 20px auto; background: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 0 10px rgba(0,0,0,0.1); }")                .append(".header { background: linear-gradient(135deg, #e53935 0%, #c62828 100%); color: white; padding: 25px; text-align: center; }")                .append(".content { padding: 30px; color: #333; }")                .append(".tour-details { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-top: 20px; }")                .append(".footer { background-color: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 0.9em; border-top: 1px solid #eee; }")                .append("</style>")                .append("</head>")                .append("<body>")                .append("<div class='container'>")                .append("<div class='header'>")                .append("<h1 style='margin:0;'>Th√¥ng B√°o Tour ƒê√£ B·ªã X√≥a</h1>")                .append("</div>")                .append("<div class='content'>");        if (isAdminDeletion) {            emailContent.append("<p>K√≠nh g·ª≠i Qu√Ω nh√† cung c·∫•p,</p>")                    .append("<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng tour <strong>").append(tour.getTourName()).append("</strong> ƒë√£ b·ªã qu·∫£n tr·ªã vi√™n x√≥a kh·ªèi h·ªá th·ªëng.</p>");        } else {            emailContent.append("<p>K√≠nh g·ª≠i Qu√Ω nh√† cung c·∫•p,</p>")                    .append("<p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng b·∫°n v·ª´a ng·ª´ng cung c·∫•p tour <strong>").append(tour.getTourName()).append("</strong>.</p>");        }        emailContent.append("<div class='tour-details'>")                .append("<h2>Chi Ti·∫øt Tour</h2>")                .append("<p><strong>M√£ Tour:</strong> ").append(tour.getTourId()).append("</p>")                .append("<p><strong>T√™n Tour:</strong> ").append(tour.getTourName()).append("</p>");        if (tour.getCreatedDate() != null) {            emailContent.append("<p><strong>Th·ªùi gian tao:</strong> ").append(tour.getCreatedDate().format(dateFormatter)).append("</p>");        }        if (tour.getCreatedDate() != null) {            emailContent.append("<p><strong>Th·ªùi gian x√≥a:</strong> ").append(LocalDateTime.now().format(dateFormatter)).append("</p>");        }        emailContent.append("</div>")                .append("<p>C·∫£m ∆°n Qu√Ω v·ªã ƒë√£ h·ª£p t√°c v·ªõi ch√∫ng t√¥i!</p>")                .append("</div>")                .append("<div class='footer'>")                .append("<p style='margin:0;'>ƒê√¢y l√† email t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>")                .append("</div>")                .append("</div>")                .append("</body>")                .append("</html>");        return emailContent.toString();    }    private void sendHtmlEmail(String toEmail, String subject, String content) {        var message = mailSender.createMimeMessage();        try {            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");            helper.setFrom(fromEmail);            helper.setTo(toEmail);            helper.setSubject(subject);            helper.setText(content, true);            mailSender.send(message);        } catch (MessagingException e) {            throw new RuntimeException("Kh√¥ng th·ªÉ g·ª≠i email", e);        }    }}