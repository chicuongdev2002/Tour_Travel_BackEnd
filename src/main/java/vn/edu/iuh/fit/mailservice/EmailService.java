package vn.edu.iuh.fit.mailservice;import jakarta.mail.MessagingException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.mail.javamail.JavaMailSender;import org.springframework.mail.javamail.MimeMessageHelper;import org.springframework.stereotype.Service;@Servicepublic class EmailService {    @Autowired    private JavaMailSender mailSender;    @Value("${spring.mail.username}")    private String fromEmail;    public void sendVerificationEmail(String toEmail, String code) {        String subject = "Xác Nhận Email";        String content = generateEmailContent(code);        sendHtmlEmail(toEmail, subject, content);    }    private String generateEmailContent(String code) {        return "<!DOCTYPE html>"                + "<html lang='vi'>"                + "<head>"                + "<meta charset='UTF-8'>"                + "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"                + "<style>"                + "body { font-family: 'Roboto', 'Helvetica', Arial, sans-serif; line-height: 1.6; color: #333; background-color: #f4f4f4; margin: 0; padding: 0; }"                + ".container { max-width: 600px; margin: 20px auto; background-color: #ffffff; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }"                + ".header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: #ffffff; padding: 20px; text-align: center; }"                + ".content { padding: 30px; }"                + "h1 { color: #ffffff; margin: 0; font-size: 28px; }"                + "h2 { color: #333333; margin-top: 0; }"                + ".code-container { background-color: #f8f9fa; border: 2px dashed #764ba2; border-radius: 8px; padding: 15px; margin: 25px 0; text-align: center; }"                + ".code { font-size: 36px; font-weight: bold; color: #764ba2; letter-spacing: 5px; }"                + ".footer { background-color: #f8f9fa; text-align: center; padding: 15px; font-size: 12px; color: #666; }"                + ".button { display: inline-block; padding: 12px 24px; background-color: #764ba2; color: #ffffff; text-decoration: none; border-radius: 5px; font-weight: bold; margin-top: 20px; transition: background-color 0.3s; }"                + ".button:hover { background-color: #5a387c; }"                + "@media only screen and (max-width: 600px) { .container { width: 100%; } }"                + "</style>"                + "</head>"                + "<body>"                + "<div class='container'>"                + "<div class='header'>"                + "<h1>Xác Nhận Email</h1>"                + "</div>"                + "<div class='content'>"                + "<p>Cảm ơn bạn đã đăng ký dịch vụ của chúng tôi. Để hoàn tất quá trình đăng ký và bảo mật tài khoản của bạn, vui lòng sử dụng mã xác nhận dưới đây:</p>"                + "<div class='code-container'>"                + "<div class='code'>" + code + "</div>"                + "</div>"                + "<p>Vui lòng nhập mã này vào trang xác nhận để kích hoạt tài khoản của bạn. Mã xác nhận này sẽ hết hạn sau 15 phút.</p>"                + "<p>Nếu bạn không yêu cầu mã này, vui lòng bỏ qua email này hoặc liên hệ với bộ phận hỗ trợ của chúng tôi nếu bạn có bất kỳ câu hỏi nào.</p>"                + "<a href='http://localhost:5173/' class='button'>Xác Nhận Email</a>"                + "</div>"                + "<div class='footer'>"                + "<p>Đây là email tự động. Vui lòng không trả lời email này.</p>"                + "<p>&copy; 2024 Tên Công Ty Của Bạn. Tất cả các quyền được bảo lưu.</p>"                + "</div>"                + "</div>"                + "</body>"                + "</html>";    }    private void sendHtmlEmail(String toEmail, String subject, String content) {        var message = mailSender.createMimeMessage();        try {            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");            helper.setFrom(fromEmail);            helper.setTo(toEmail);            helper.setSubject(subject);            helper.setText(content, true);            mailSender.send(message);        } catch (MessagingException e) {            throw new RuntimeException("Không thể gửi email", e);        }    }}