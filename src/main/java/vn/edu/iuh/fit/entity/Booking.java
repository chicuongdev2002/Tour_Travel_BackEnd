package vn.edu.iuh.fit.entity;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import jakarta.persistence.*;import lombok.*;import vn.edu.iuh.fit.enums.BookingStatus;import vn.edu.iuh.fit.enums.CheckInStatus;import java.math.BigDecimal;import java.time.LocalDate;import java.time.LocalDateTime;import java.util.Set;import java.util.UUID;@Getter@Setter@Entity@Table(name = "booking")@NoArgsConstructor@AllArgsConstructor@Builderpublic class Booking{    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private long bookingId;    @ManyToOne    @JoinColumn(name = "user_id")    @JsonIgnoreProperties({"email", "phoneNumber", "addresses", "experienceYear"})    private User user;    @ManyToOne    @JoinColumn(name = "departure_id")    private Departure departure;    private LocalDateTime bookingDate;    private String participants;    private boolean isActive;    @OneToMany(mappedBy = "booking", cascade = CascadeType.ALL, fetch = FetchType.LAZY)    @JsonIgnore    private Set<Payment> payments;    @Column(name = "checkin_status")    @Enumerated(EnumType.STRING)    private CheckInStatus checkinStatus = CheckInStatus.NOT_CHECKED_IN;    @Column(name = "checkin_time")    private LocalDateTime checkinTime;}